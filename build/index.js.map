{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.jsx", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/root.jsx", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/routes/index.jsx", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts.jsx", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/$postId.jsx", "../app/utils/db.server.ts", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/index.jsx", "route-module:/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/new.jsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/caglar/Documents/prive/remix/remix-blog/app/entry.server.jsx\";\nimport * as route0 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/root.jsx\";\nimport * as route1 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/routes/index.jsx\";\nimport * as route2 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts.jsx\";\nimport * as route3 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/$postId.jsx\";\nimport * as route4 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/index.jsx\";\nimport * as route5 from \"/Users/caglar/Documents/prive/remix/remix-blog/app/routes/posts/new.jsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/posts\": {\n    id: \"routes/posts\",\n    parentId: \"root\",\n    path: \"posts\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/posts/$postId\": {\n    id: \"routes/posts/$postId\",\n    parentId: \"routes/posts\",\n    path: \":postId\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route3\n  },\n  \"routes/posts/index\": {\n    id: \"routes/posts/index\",\n    parentId: \"routes/posts\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route4\n  },\n  \"routes/posts/new\": {\n    id: \"routes/posts/new\",\n    parentId: \"routes/posts\",\n    path: \"new\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route5\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\n\nexport default function handleRequest(\n  request,\n  responseStatusCode,\n  responseHeaders,\n  remixContext\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import { Outlet, LiveReload, Link, Links, Meta } from \"remix\";\nimport globalStylesUrl from \"~/styles/global.css\";\n\nexport const links = () => [{ rel: \"stylesheet\", href: globalStylesUrl }];\n\nexport const meta = () => {\n  const description = \"A cool blog built with Remix\";\n  const keywords = \"remix, react, javascript\";\n\n  return {\n    description,\n    keywords,\n  };\n};\n\nexport default function App() {\n  return (\n    <Document>\n      <Layout>\n        <Outlet />\n      </Layout>\n    </Document>\n  );\n}\n\nfunction Document({ children, title }) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        <Meta />\n        <Links />\n        <title>{title ? title : \"Remix Blog\"}</title>\n      </head>\n      <body>\n        {children}\n        {process.env.NODE_ENV === \"development\" ? <LiveReload /> : null}\n      </body>\n    </html>\n  );\n}\n\nfunction Layout({ children }) {\n  return (\n    <>\n      <nav className=\"navbar\">\n        <Link to=\"/\" className=\"logo\">\n          Remix\n        </Link>\n\n        <ul className=\"nav\">\n          <li>\n            <Link to=\"/posts\">Posts</Link>\n          </li>\n        </ul>\n      </nav>\n\n      <div className=\"container\">{children}</div>\n    </>\n  );\n}\n\nexport function ErrorBoundary({ error }) {\n  console.log(error);\n  return (\n    <Document>\n      <Layout>\n        <h1>Error</h1>\n        <p>{error.message}</p>\n      </Layout>\n    </Document>\n  );\n}\n", "function Home() {\n  return (\n    <div>\n      <h1>Welcome to Remix!</h1>\n      <p>\n        Remix is a full stack web framework by the creators of React Router.\n        This is a simple blog app from the Traversy Media Remix crash course.\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n", "import { Outlet } from \"remix\";\n\nfunction Posts() {\n  return (\n    <>\n      <Outlet />\n    </>\n  );\n}\n\nexport default Posts;\n", "import { Link, redirect, useLoaderData } from \"remix\";\nimport { db } from \"~/utils/db.server\";\n\nexport const loader = async ({ params }) => {\n  const post = await db.post.findUnique({\n    where: { id: params.postId },\n  });\n\n  if (!post) throw new Error(\"Post not found\");\n\n  const data = { post };\n  return data;\n};\n\nexport const action = async ({ request, params }) => {\n  const form = await request.formData();\n  if (form.get(\"_method\") === \"delete\") {\n    const post = await db.post.findUnique({\n      where: { id: params.postId },\n    });\n\n    if (!post) throw new Error(\"Post not found\");\n\n    await db.post.delete({ where: { id: params.postId } });\n    return redirect(\"/posts\");\n  }\n};\n\nfunction Post() {\n  const { post } = useLoaderData();\n\n  return (\n    <div>\n      <div className=\"page-header\">\n        <h1>{post.title}</h1>\n        <Link to=\"/posts\" className=\"btn btn-reverse\">\n          Back\n        </Link>\n      </div>\n\n      <div className=\"page-content\">{post.body}</div>\n\n      <div className=\"page-footer\">\n        <form method=\"POST\">\n          <input type=\"hidden\" name=\"_method\" value=\"delete\" />\n          <button className=\"btn btn-delete\">Delete</button>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n", "import { PrismaClient } from '@prisma/client'\n\nlet db: PrismaClient\n\ndeclare global {\n  var __db: PrismaClient | undefined\n}\n\nif (process.env.NODE_ENV === 'production') {\n  db = new PrismaClient()\n  db.$connect()\n} else {\n  if (!global.__db) {\n    global.__db = new PrismaClient()\n    global.__db.$connect()\n  }\n  db = global.__db\n}\n\nexport { db }", "import { useLoaderData, Link } from \"remix\";\nimport { db } from \"~/utils/db.server\";\nexport const loader = async () => {\n  const data = {\n    posts: await db.post.findMany({\n      take: 20,\n      select: { id: true, title: true, createdAt: true },\n      orderBy: { createdAt: \"desc\" },\n    }),\n  };\n  return data;\n};\nfunction PostItems() {\n  const { posts } = useLoaderData();\n  return (\n    <>\n      <div className=\"page-header\">\n        <h1>Posts</h1>\n        <Link to=\"/posts/new\" className=\"btn\">\n          New Post\n        </Link>\n      </div>\n      <ul className=\"posts-list\">\n        {posts.map((post) => (\n          <li key={post.id}>\n            <Link to={post.id}>\n              <h3>{post.title}</h3>\n              {new Date(post.createdAt).toLocaleString()}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default PostItems;\n", "import { Link, redirect } from \"remix\";\nimport { db } from \"~/utils/db.server\";\n\nexport const action = async ({ request }) => {\n  const form = await request.formData();\n  const title = form.get(\"title\");\n  const body = form.get(\"body\");\n\n  const fields = { title, body };\n  const post = await db.post.create({ data: fields });\n  return redirect(`/posts/${post.id}`);\n};\n\nfunction New() {\n  return (\n    <>\n      <div className=\"page-header\">\n        <h1>New Post</h1>\n        <Link to=\"/posts\" className=\"btn btn-reverse\">\n          Back\n        </Link>\n      </div>\n      <div className=\"page-content\">\n        <form method=\"POST\">\n          <div className=\"form-control\">\n            <label htmlFor=\"title\">Title</label>\n            <input type=\"text\" name=\"title\" id=\"title\" />\n          </div>\n          <div className=\"form-control\">\n            <label htmlFor=\"body\">Post Body</label>\n            <textarea name=\"body\" id=\"body\" />\n          </div>\n          <button type=\"submit\" className=\"btn btn-block\">\n            Add Post\n          </button>\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default New;\n"],
  "mappings": "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",
  "names": []
}
